var color_pallete = {
    "dark": "-16635078",
    "dark_middle": "-14714228",
    "middle": "-4203529",
    "light_middle": "-1972750",
    "light": "-1",
    "white": "white",
    "grey": "grey",
    "default": ""
}

var main_dashboard = component("grid", "")

var dashboard_content = component("grid", "")
var dashboard_menu = component("grid", "")

grid_add(main_dashboard, dashboard_menu, 0, 0, 1, 1, 0, 1, 3, 0, 0, 0, 0, 0)
grid_add(main_dashboard, dashboard_content, 1, 0, 1, 1, 1, 1, 3, 0, 0, 0, 0, 0)
d_grid(dashboard_content)
config(dashboard_menu, "background", color_pallete["dark"])

var last_comp = [[]]

# Call this function with panel or grid;
var replace_dashboard_content = fn(content){
    if(!empty(last_comp[0])){
        grid_remove(dashboard_content, last(last_comp[0]))
        set(last_comp, 0, pop(last_comp[0]))    
    }
    grid_add(dashboard_content, content, 0, 1, 1, 1, 1, 1, 3, 3, 0, 0, 0, 0)
    set(last_comp, 0, push(last_comp[0], content))
}


# Make events for each buttons and include in dashboard_list hash;
var coa_event_dashboard = fn(){
    var coa_grid = setup_form(ctx)
}
var db_event_dashboard = fn(){
    var conf_grid = config_form(ctx)
}
var credit_event_dashboard = fn(){
    var size_info = component_info(dashboard_content)
    var credits_content = call_credits(size_info[4], size_info[5])
    var credit_panel = credits_content[0]
    var credit_inner_grid = credits_content[1]
    var credit_details = credits_content[2]
    replace_dashboard_content(credit_panel)
    roll_credits(credit_panel, credit_inner_grid, credit_details)
}

var home_event_sidebar = fn(){
    var home_grid = component("grid", "Home")
    config(home_grid, "background", color_pallete["default"])
    var home_label = component("label", "Empty for now")
    grid_add(home_grid, home_label, 0,0, 1,1, 1,1, 3, 0)
    replace_dashboard_content(home_grid)

    var header_label = component("label", "Dashboard")
    config(header_label, "font", ["Montserrat", 1, 30])
    grid_add(dashboard_content, header_label, 0, 0, 1, 1, 1, 0, 3, 3, 10, 15, 10, 10)
}


# Utility function to empty sidebar;
var clear_sidebar = fn(){
    if(!empty(dashboard_components[0])){
        each(dashboard_components[0], fn(e, index){
            grid_remove(dashboard_menu, last(dashboard_components[0]))
            set(dashboard_components, 0, pop(dashboard_components[0]))    
        })
    }
}

var dashboard_components = [[], [0]]

# Function for generating an empty panel to fill parts of the page;
var get_filler  = fn(font_choice){
    var filler_panel = component("panel", "")
    config(filler_panel, "background", color_pallete[font_choice])
    return filler_panel
}

# Function to calculate font scaling for components;
var get_font_adjustment = fn(){
    var frame_info = frame()
    var default_w = 1000
    var w = frame_info[0]
    return (w-default_w) * 0.01
}

# Function used to create sidebar;
var maximize_sidebar = fn(){
    clear_sidebar()
    var sidebar_font = ["Merriweather", 0, 15]
    var adjusted_size = get_font_adjustment()

    each(keys(dashboard_list), fn(e, index){
        var temp_button = c_btn_(e, 6, 0)

        var original_size = sidebar_font[2] 
        set(sidebar_font, 2, sidebar_font[2] + adjusted_size)
        config(temp_button, "font", sidebar_font)
        config(temp_button, "align", 0)
        set(sidebar_font, 2, original_size)

        set(dashboard_components, 0, push(dashboard_components[0], temp_button))
        set(dashboard_components[1], 0, index)
        event(last(dashboard_components[0]), dashboard_list[e])
        grid_add(dashboard_menu, last(dashboard_components[0]), 1, index + 1, 1, 1, 4, 0, 3, 1, 0, 0, 2, 0)
    })
    var app_label = component("label", app_name)
    config(app_label, "font", ["Montserrat", 1, 33 + adjusted_size])
    config(app_label, "foreground", color_pallete["white"])
    config(app_label, "align", 1)
    grid_add(dashboard_menu, app_label, 1, 0, 1, 1, 1, 1, 3, 3, 0, 6, 0, 0)
    set(dashboard_components, 0, push(dashboard_components[0], app_label))

    var filler_panel = get_filler("dark")
    var curr_index = dashboard_components[1][0]
    grid_add(dashboard_menu, filler_panel, 1, curr_index + 2, 1, 1, 4, 5, 3, 1, 0, 0, 0, 0)
    set(dashboard_components, 0, push(dashboard_components[0], filler_panel))

}

var minimize_sidebar = fn(){
    clear_sidebar()

    var sidebar_font = ["Merriweather", 0, 15]
    var temp_button = c_btn_("show", 6, 0)
    var original_size = sidebar_font[2] 
    var adjusted_size = get_font_adjustment()
    set(sidebar_font, 2, sidebar_font[2] + adjusted_size)
    config(temp_button, "font", sidebar_font)
    set(sidebar_font, 2, original_size)

    set(dashboard_components, 0, push(dashboard_components[0], temp_button))
    event(last(dashboard_components[0]), maximize_sidebar)
    grid_add(dashboard_menu, last(dashboard_components[0]), 1, 0, 1, 1, 2, 0, 3, 1, 0, 0, 0, 0)

    var filler_panel = get_filler("dark")
    var curr_index = dashboard_components[1][0]
    grid_add(dashboard_menu, filler_panel, 1, curr_index + 1, 1, 1, 4, 5, 3, 1, 0, 0, 0, 0)
    set(dashboard_components, 0, push(dashboard_components[0], filler_panel))
}


# Hash to generate sidebar;
var dashboard_list = {
    "Minimize" : minimize_sidebar,
    "Home": home_event_sidebar,
    "Chart of Account": coa_event_dashboard,
    "Database Configuration": db_event_dashboard,
    "Credits": credit_event_dashboard
}


# Main Function for dashboard;
var call_dashboard = fn(){
    maximize_sidebar()
    home_event_sidebar()

    var sidebar_font_size = 15
    var title_font_size = 30

    # Event to adjust font size of sidebar;
    event_frame(fn(x) {
        if(x[0] == "RESIZED"){
            var adjustment_value = get_font_adjustment()
            each(dashboard_components[0], fn(e, index){
                
                var curr_comp = dashboard_components[0][index]
                var comp_font = get(curr_comp, "font")

                if(component_type(curr_comp) == "label"){
                    var original_size = title_font_size
                }else{
                    var original_size = sidebar_font_size
                }

                set(comp_font, 2, original_size + adjustment_value)
                config(curr_comp, "font", comp_font)
            })
        }
    })
    return main_dashboard
}