load_module("csv")
var credit_file = "credit.csv"
var credit_path = userhome() + separator() + credit_file

var credit_content = csv_from_string(",", read(credit_path))

# Creates example file if credit file doesn't exitst;
if(credit_content == null){
    var csv_example = [[2, "Bakwan"], [1,"Supervisor"],[0, "Pak Noprianto"], [0, "blabla"], [1, "Roles"], [0, "Jona jola"], [0, "Bola"]]

    write(credit_path, csv_to_string(",",csv_example))

    var credit_content = csv_from_string(",", read(credit_path))
    message("Example file has been created")
}

# The CSV example
    CSV EXAMPLE
    2,Bakwan
    1,Supervisor
    0,Noprianto
    0,blabla
    1,ROLES
    0,Jona jola
    0,Bola
    (1:) = bold and as title/header
;

var small_font_size = 25
var big_font_size = 40
var title_font_size = 60
var font_list = {
    "0": ["Rockwell", 0, small_font_size],
    "1": ["Times New Roman", 1, big_font_size],
    "2": ["Times New Roman", 3, title_font_size]
}

var call_credits = fn(w, h){
    var d = [0, h/2, 2, 2]
    var s = 30

    var p = component("panel", "")

    var credit_grid = component("grid", "")
    d_grid(credit_grid)

    # Add credit content here;
    var lines = [[]]
    var default_w = 1000
    each(credit_content, fn(e, index) {
        var curr_font = font_list[e[0]];
        if(curr_font == null){
            var curr_font = font_list[0]
        }
        var original_size = curr_font[2] 
        var adjusted_size = (w-default_w) * 0.01
        set(curr_font, 2, curr_font[2] + adjusted_size)

        set(lines, 0, push(lines[0], component("label", e[1])))
        config(lines[0][index], "font", curr_font)

        # Reset size to original;
        set(curr_font, 2, original_size)
        if(e[0] == "0"){
            config(lines[0][index], "align", 0)
            grid_add(credit_grid, lines[0][index], 0, index, 1, 1, 0, 0, 2, 0)
        }else{
            grid_add(credit_grid, lines[0][index], 0, index, 1, 1, 0, 0, 2, 0, 9, 0, 0, 0)
        }
    })

    # Add grid first to panel before attempting to move it;
    panel_add(p, credit_grid, 0, 0, w, h)
    return [p, credit_grid, d]
}


var roll_credits = fn(p, grid, d){
    var credit_timer = timer(30, fn() {
        # Call frame to get new size if frame is resized during loop;
        var panel_info = component_info(p)
        if(panel_info == null){
            stop_timer(credit_timer)
        }else{
            var w =  panel_info[4]
            var h = panel_info[5]

            var x = d[0]
            var y = d[1]
            var dx = d[2]
            var dy = d[3]

            if (y < -h) {
                var y = h * 0.8
            }
            var y = y - dy

            set(d, 1, y)
            set(d, 2, dx)
            set(d, 3, dy)
            
            panel_add(p, grid, x, y, w, h)
        }

    })
}

