#
    config.singkong
    Database configuration
    part of Bakwan: simple accounting software
    
    Authors:
    Noprianto (nop@noprianto.com)
;



load_module("db_util")

var config_db_types = [
    "User",
    "Embedded",
    "Network",
    "PostgreSQL"
]
var config_db_types_ = join(",", config_db_types)

var set_db_conn_param = fn(t, h, u, p, n) {
    var dt = get(t, "text")
    c_enable_text(h)
    c_enable_text(u)
    c_enable_text(p)
    c_enable_text(n)

    if (dt == "User") {
        c_disable_text(h)
        c_disable_text(u)
        c_disable_text(p)
        c_disable_text(n)
        return dt
    } 
    if (dt == "Embedded") {
        c_disable_text(h)
        c_disable_text(u)
        c_disable_text(p)
        config(n, "focus", true) 
        return dt
    }
    config(h, "focus", true) 
    return dt
}

var test_db_conn = fn(ctx, t, h, u, p, n) {
    var dt = get(t, "text")
    var dh = get(h, "contents")
    var du = get(u, "contents")
    var dp = get(p, "contents")
    var dn = get(n, "contents")
    var n = ctx["name"]
    if (n == null) {
        return n
    }

    var c = "//" + dh + "/" + dn
    if (dt == "User") {
        return db_connect_embed_user(n)
    } 
    if (dt == "Embedded") {
        return db_connect_embed(dn)
    }
    if (dt == "Network") {
        return db_connect("derby", c, du, dp)
    }
    if (dt == "PostgreSQL") {
        return db_connect("postgresql", c, du, dp)
    }
    return null
}

var config_form = fn(ctx) {
    var ret = {}
    var r = []

    var g = component("grid", "")

    var btn_save = c_btn_(_("cmd_save"), 0, _m("cmd_save"))
    var btn_connect = c_btn_(_("cmd_test_connect"), 1, _m("cmd_test_connect"))
    var btn_close = c_btn_(_("cmd_close"), 5, _m("cmd_close"))

    var g_btn = component("grid", "")
    grid_add(g_btn, btn_connect, 0, 0, 1, 1, 1, 0, 0, 1)
    grid_add(g_btn, btn_close, 1, 0, 1, 1, 1, 0, 0, 2)
    grid_add(g_btn, btn_save, 2, 0, 1, 1, 0, 0, 0, 2)

    var lbl_type = component("label", _("label_db_type"))
    var cmb_type = component("combobox", config_db_types_)
    var lbl_host = component("label", _("label_db_host"))
    var txt_host = component("text", "")
    var lbl_user = component("label", _("label_db_user"))
    var txt_user = component("text", "")
    var lbl_pass = component("label", _("label_db_password"))
    var pas_db = component("password", "")
    var lbl_name = component("label", _("label_db_name"))
    var txt_name = component("text", "")

    var gp = component("grid", "")

    grid_add(g, lbl_type, 0, 0, 1, 1, 0, 0, 0, 1)
    grid_add(g, cmb_type, 1, 0, 2, 1, 1, 0, 1, 1)
    grid_add(g, lbl_host, 0, 1, 1, 1, 0, 0, 0, 1)
    grid_add(g, txt_host, 1, 1, 2, 1, 1, 0, 1, 1)
    grid_add(g, lbl_user, 0, 2, 1, 1, 0, 0, 0, 1)
    grid_add(g, txt_user, 1, 2, 2, 1, 1, 0, 1, 1)
    grid_add(g, lbl_pass, 0, 3, 1, 1, 0, 0, 0, 1)
    grid_add(g, pas_db, 1, 3, 2, 1, 1, 0, 1, 1)
    grid_add(g, lbl_name, 0, 4, 1, 1, 0, 0, 0, 1)
    grid_add(g, txt_name, 1, 4, 2, 1, 1, 0, 1, 1)
    grid_add(g, gp, 0, 5, 2, 1, 1, 1, 3, 0)
    grid_add(g, g_btn, 0, 6, 3, 1, 1, 0, 3, 0)

    set_db_conn_param(cmb_type, txt_host, txt_user, pas_db, txt_name)
    event(cmb_type, fn() {
        set_db_conn_param(cmb_type, txt_host, txt_user, pas_db, txt_name)
    })

    event(btn_connect, fn() {
        var db = test_db_conn(ctx, cmb_type, txt_host, txt_user, pas_db, txt_name)
        if (db == null) {
            message(_("error_db_connect"), _("title_error"))
        } else {
            message(_("msg_db_connected"), _("title_info"))
        }
    })

    event(btn_save, fn() {
        set(ret, "command", "save")
        set(ret, "config", true)
        custom_dialog_close(last(r))
        # Test DB connection, return false if invalid connection;
        var db = test_db_conn(ctx, cmb_type, txt_host, txt_user, pas_db, txt_name)
        if (db == null) {
            message(_("error_db_connect"), _("title_error"))
            return false
        } 

        var db_type_input = get(cmb_type, "text")
        var host_input = get(txt_host, "contents")
        var user_input = get(txt_user, "contents")
        var password_input = get(pas_db, "contents")
        var name_input = get(txt_name, "contents")
        
        var config_hash = {
            "db_type": db_type_input,
            "db_host": host_input,
            "db_user": user_input,
            "db_password": password_input,
            "db_name": name_input
        }
        # Content confirmation
            message(config_hash)
        ;
        if(properties_write(conf_path, config_hash)){
            message(_("success_write_file"), _("title_info"))
            setup_form(ctx)
        }else{
            message(_("error_write_file"), _("title_error"))
            return false
        }
    })

    event(btn_close, fn() {
        set(ret, "command", "close")
        custom_dialog_close(last(r))
    })

    custom_dialog(g, _("title_db_config"), 
        ctx["dialog_width"], ctx["dialog_height"], 
        true, r)

    return ret
}
